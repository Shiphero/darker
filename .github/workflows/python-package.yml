---
name: build

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - master
  pull_request:
    branches:
      - master


jobs:

  test-nixos:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: python310
          - os: macos-latest
            python-version: python39
            # see https://github.com/cachix/install-nix-action/issues/135
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-21.11
      - name: Run tests in nix-shell
        run: |
          nix-shell \
            --pure \
            --argstr pythonVersion ${{ matrix.python-version }} \
            --run '
              python -m venv venv
              source venv/bin/activate
              pip install -e '.[test]'
              pytest
            ' \
            ./default.nix

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        constraints: ['']
        include:
          - os: ubuntu-latest
            python-version: '3.7'
            constraints: '--constraint constraints-oldest.txt'
          - os: ubuntu-latest
            python-version: '3.10'
            constraints: '--constraint constraints-future.txt'
            upgrade: '--upgrade --upgrade-strategy=eager'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Upgrade pip, install wheel and twine
        run: |
          # strict dependency resolution added in pip 20.3
          python -m pip install --upgrade 'pip>=20.3' wheel twine
      - name: Build source distribution
        run: python setup.py sdist
      - name: Build wheel distribution
        run: python setup.py bdist_wheel
      - name: Validate distributions
        run: twine check dist/*
      - name: Get Darker version
        shell: python
        run: |
          from os import environ
          from pathlib import Path
          from runpy import run_path
          version = run_path("src/darker/version.py")["__version__"]
          Path(environ["GITHUB_ENV"]).write_text(f"VERSION={version}\n")
      - name: Install Darker and its dependencies
        env:
          pip_options: ${{ matrix.upgrade }} ${{ matrix.constraints }}
        run: pip install ${pip_options}
                 "dist/darker-${{ env.VERSION }}-py3-none-any.whl[test]"
      - name: Run Pytest
        run: |
          pytest --darker
